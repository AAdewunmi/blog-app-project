package com.springapplication.blogappproject.entity;

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.HashSet;
import java.util.Set;

/**
 * Represents a blog post entity.
 * This class is mapped to the "posts" table in the database.
 * It includes fields for id, title, content, and description.
 * The title field is unique across all posts.
 */

@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(
        name = "posts", uniqueConstraints = {@UniqueConstraint(columnNames = {"title"})}
)
public class Post {

    /**
     * Unique identifier for the post.
     * This field is auto-generated by the database.
     */

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * Title of the post.
     * This field is required and must be unique.
     */
    @Column(name = "title", nullable = false)
    private String title;

    /**
     * Content of the post.
     * This field is required.
     */
    @Column(name = "content", nullable = false)
    private String content;

    /**
     * Description of the post.
     * This field is required.
     */
    @Column(name = "description", nullable = false)
    private String description;

    /**
     * Set of comments associated with the post.
     * This field establishes a one-to-many relationship with the Comment entity.
     */
    @OneToMany(mappedBy = "post", cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)
    private Set<Comment> comments = new HashSet<>();

    /**
     * Category associated with the post.
     * This field establishes a many-to-one relationship with the Category entity.
     */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "category_id", nullable = false)
    private Category category;
}
